:Speaker's Name:Session Title:Abstract:Speaker Bio OOO:Mitchell Hashimoto:Secrets, Certificates, and Identity with Vault:"Secrets management is a complex problem that all organizations ranging from startups to large enterprises face. Secure distribution of secrets is only a small part of the challenge, as operators and security teams must reason about key rolling, auditing, and incident management during a compromise. Beyond the basic storage of passwords, secrets also include certificates, keys, and sensitive user data (PII).  Vault is a tool designed to tackle these problems by centralizing secrets, access control, and auditing policies. It is architected for modern systems: it is a distributed system, it is highly available, and it is built to run on physical machines or the cloud. It not only manages basic secrets, but also acts as a complete PKI solution, an SSH access broker, and more.  Vault is being used today by some of the world's most security sensitive organizations.  In this talk we discuss the problems faced in secrets management and how Vault is being used to solve them in production.":Mitchell is the founder of HashiCorp, a company that builds powerful and elegant DevOps tools. He is the creator of tools such as Vagrant, Packer, Consul, Vault, Terraform, and more. He is also an O’Reilly author and professional speaker. He is one of the top GitHub users by followers, activity, and contributions. “Automation obsessed,” Mitchell solves problems with as much computer automation as possible.  OOO:Igor Galić/David Schmitt:Hitchhiker's Guide to Testing Infrastructure Code:"Infrastructure as Code needs Testing like any code. Software Engineering has a wide range of approaches to testing software, all bad in their own ways, but all required to gain confidence in the built artefacts. In this talk we will provide an overview of the different layers of testing: * Code Review * Unit Testing * Full System Testing * Performance Testing * Monitoring The different layers provide different benefits, require different tradeoffs and have different costs attached to them. This talk will aim to provide  the big picture on what you can do to build confidence into your infrastructure development.  Although this talk will use Puppet examples the general theme and approach should be applicable to existing and future tools for building infrastructure from code.":"Igor Galić is a long-term puppet modules community herder and knows everything about collecting contributions from a wide range of contributors and making them ship-shape. David Schmitt is a passionate software engineer who has worked on  Puppet modules since before they were invented and recently joined Puppet Labs as part of the crew maintaining Puppet Labs' supported modules, which are in used by tens of thousands of Puppet users.  " OOO:Walter Heck:"Configuration Management: time for a 4GL?":"In programming languages we saw generations of languages; 3GL languages like C++, C#, Java etc. 4GL languages like Delphi and Visual FoxPro aimed to abstract away many of the things not so relevant for GUI Database applications.  In Configuration Management we have roughly seen 3 generations of tools so far: cfEngine is of the first generation, Puppet, Chef, Ansible and the likes are second generation, while tools like docker, rocket and the likes can be considered the 3rd generation.  What could we imagine a 4th generation to be like? In this talk we’ll look at the strengths and weaknesses of our current tools and sum up properties we’d like to see in a 4th generation tools.":"Walter Heck is the founder and CTO of OlinData. He is co-organiser of the configuration management devroom at FOSDEM and co-organiser of the config management camp.  Walter has more then a decade of background in Programming, MySQL Databases and more recently Puppet and all the tools that come with it.  Walter has spoken at many international conferences on 3 continents over the past 6 years." OOO:Julian Dunn:Orchestration? You Don't Need Orchestration. What You Want Is Choreography.:"The topic of orchestration comes up a lot when discussing configuration management. In this talk, I'd like to discuss several things: * How the word ""orchestration"" has been used to mean so many different things that it is a meaningless term now for shared understanding * What I think people actually mean when they say they want orchestration (ordered execution of operations across a fleet) * Why I think this model of thinking is wrong and incompatible with the autonomous actor model * How we could build systems that get us the outcomes of orchestration without needing to build it explicitly.  * How this is particularly pertinent in an era of containerization and microservices.":Julian is a product manager at Chef & started his career at the company in professional services. His first experience with Chef was at SecondMarket, a New-York based alternative markets startup that was acquired by NASDAQ. He has over fifteen years of systems administration & software development experience at outfits large and small across such diverse sectors as advertising, broadcasting, Internet security and construction. When he's not helping customers, he enjoys good craft beer, indie music, and writing biographies about himself in the third person.  OOO:Liam Bennett:Everything is an orchestration problem:What really is orchestration? It is one those abstract topics, much like configuration management, that is defined differently by different organisations and covers a wide range of subject areas. Everything from ssh in a for-loop to container management now fits under the term orchestration. Is all that really orchestration? Why do we need orchestration? How does it fit into the wider configuration management picture. This talk aims to delve into those areas, to try and find a common understanding and to discuss why these problems are interesting, why they hard and what we can do to try and solve them.:Liam Bennett is an Senior Engineer for OpenTable focused on designing and implementing the infrastructure and tools used by OpenTable’s developers every day. Prior to OpenTable Liam has been a release engineer and developer for several organisations but jumped into operations a few year ago.  OOO:Jonathan Boulle:"etcd: Overview and Future":"etcd is an open source distributed consistent key-value store that was introduced by the team at CoreOS. Since its release in 2013 it has become a mature cornerstone of a variety of systems in the container ecosystem for doing networking, service discovery, configuration management and load balancing. This talk will dive into what etcd is and its history, its new v3 API, production use cases and how it powers reliable distributed systems.  ":"Jonathan Boulle, Team Lead at CoreOS Jonathan Boulle works at CoreOS on all things distributed and all things contained. He's contributed heavily to etcd and fleet, lead the development of the App Container (appc) specification and rkt, the first appc runtime, as well as the upstream Kubernetes project. Prior to CoreOS, he worked at Twitter on their cluster management platform based on Mesos and Aurora. He's passionate about Linux, F/OSS, the Oxford comma, and developing well-defined systems that scale.  " OOO:Gareth Rushgrove:Managing Container Configuration with Metadata:"The shipping container metaphor for Docker points to many advantages of running software using containers. But what equivalents do we have for other parts of the shipping container ecosystem like shipping manifests and bills of lading? As containers become a more popular primitive in infrastructure how we manage their configuration becomes increasingly  important.  Many features of traditional package managers are based on metadata. You can find out who created a package, where a particular file came from, whether the package has a known vulnerability. What would this look like for containers? This talk will look at: * What capabilities exist for associating metadata with containers, in particular labels in Docker and Kubernetes * How we can best expose runtime metadata * What problems can be solved by agreeing on standards for container metadata * Demo some open source projects and look at the sort of tools we might build atop those standards ":Gareth Rushgrove is a senior software engineer at Puppet Labs. He works remotely from Cambridge, UK, building interesting tools for people to better manage infrastructure. Previously he worked for the UK Government Digital Service focused on infrastructure, operations and information security. When not working he can be found writing the Devops Weekly newsletter or hacking on software in new-fangled programming languages.  OOO:David Lutterkort:Orchestration and the New York subway system: :"David is a principal engineer at Puppet Labs and the technical lead for Puppet Labs' development of application management, and used to lead the development of Razor, the best provisioning tool, ever. Before joining Puppet Labs, David worked at Red Hat on a variety of management tools and served as the maintainer of Apache Deltacloud. He was one of the earliest contributors to Puppet, and is the main author of Augeas, a configuration editing tool.  " OOO:James Nugent:Provisioning infrastructure with Terraform and Packer:Terraform from Hashicorp has become a commonly used open-source tool for infrastructure provisioning across a wide variety of clouds and on-premise hardware. In combination with Packer, it can unlock a variety of workflows. In this talk we'll look at how to use them effectively, and at the internals. May contain graph theory!:James is a developer from England, currently working at HashiCorp and Event Store. He is a core committer to Terraform, and has a wide range of application and infrastructure automation experience, most recently building high-volume metric ingest systems at Boundary. James is a connoisseur of West Country cider, and of old guitars.  OOO:Jonathan Boulle:"rkt and Kubernetes: What’s new with Container Runtimes and Orchestration":"Application containers are changing some of the fundamentals of how Linux is used in the server environment.  rkt is a daemon-free container runtime with a focus on security. With rkt users can run containerized apps packaged in either the appc image format or docker image format. Containers running under rkt execute as normal POSIX processes and can be managed using existing process management tools like upstart, systemd, runit and etc.  rkt is also an implementation of the App Container (appc) runtime specification, which defines the concept of a pod: a grouping of multiple containerized applications in a single execution unit. Pods are also used as the abstraction within Kubernetes, and having rkt work natively with pods makes it uniquely suited as a Kubernetes container runtime engine.  With different application container runtimes on Linux to choose from (including Docker, kurma and rkt) this session will cover the differences. And, it will dive into use cases for rkt under Kubernetes. Attendees will leave set up for success with rkt as an independent component and under Kubernetes.  ":"Jonathan Boulle, Team Lead at CoreOS Jonathan Boulle works at CoreOS on all things distributed and all things contained. He's contributed heavily to etcd and fleet, lead the development of the App Container (appc) specification and rkt, the first appc runtime, as well as the upstream Kubernetes project. Prior to CoreOS, he worked at Twitter on their cluster management platform based on Mesos and Aurora. He's passionate about Linux, F/OSS, the Oxford comma, and developing well-defined systems that scale.  " OOO:Arnold Bechtoldt & Johannes Scheuermann:Cfg Mgmt vs. Containers or both? - Containers in a world full of Cfg Mgmt Systems:Since the hype around containers is still going on, many people are planning to move their applications into containers. You can earn lots of benefits when making this decision. But similar to other hypes you will notice that you will face many challenges that need to be handled. In this session we want to share some of our lessons learned in both of these worlds. We want to discuss when to choose cfg mgmt and when to choose containerized solutions. Also we will show some use cases were you can use a combination of both strategies.:Arnold and Johannes are working for inovex in Germany. Arnold has a strong background in configuration management and Johannes is working with container technologies for years. Both like to try and discuss different (and new) approaches to solve today's infrastructure challenges. Due to this strong interaction they decided to make a talk about the up- and downsides of both worlds.  OOO:Tomas Doran:Empowering developers to deploy their own data stores with Terraform and puppet:"Traditional infrastructures involve sysadmins setting up machines and significant lead time. In an agile environment this is often a bottleneck to rapidly iteratation and experimenationt. With the advent of cloud computing, it’s easy to get more machines however they still need configuration and management. Whilst you can empower developers to launch their own instances, they seldom want the ongoing maintenance.  At Yelp, we’ve taken a hybrid approach to this problem - in common cases such as Elasticsearch or Cassandra clusters, we already have operational best practices for deploying and managing multiple clusters in multiple regions, and recently we’ve taken this further, allowing developers to entirely self-service provision / scale their own clusters.  Using puppet with per-module hiera data allows cluster(s) to be configured from YAML files. Jenkins re-uses this to generate Terraform configuration for clusters, and the operations team is notified about pending changes, allowing easy review and deployment.":Tomas works on infrastructure automation at large scale for Yelp. He speaks regularly at technical conferences on a number of topics between testing, development, architecture, automation and systems administration. Tom came to the dark side of systems & devops after being a professional perl developer for many years. He’s an avid open source contributor and lives in London with his fiancé and far too many cats and dogs.  OOO:Daniele Sluijters:How we moved to Puppet 4:Moving to Puppet 4 brings plenty of challenges and more so when you have to move over thousands of servers. This talk focusses on how we achieved this, what we tested, how we tested, how we validated and eventually when we pressed the button how the rollout went.:"Daniele Sluijters is a featured community member and author of tools like pypuppetdb and Puppetboard. He works together with the Puppet Labs module team on a number of modules, most notably puppetlabs-apt and has worked on a number of Puppet-related publications. He's been involved in the community for about five years, starting off with helping out on IRC and the mailing lists and eventually a regular speaker at Puppet events. He is one of the main drivers behind the Puppet Community effort at https://github.com/puppet-community" OOO:Spencer Krum::"Advisory Third Party CI Third party CI is a relatively new concept (to me at least) that will be introduced in this talk, and expanded on. I'll show the ways we do this already in the OpenStack and Puppet communities, and lay out my vision for how we can do this at at much larger scale.  Third party advisory CI is the process of a third party providing CI information to the development team of a project. These individuals or projects are not core developers, and the CI system stands next to the main CI for the project. The CI vote is advisory, and doesn't block merge.  Imagine Project A is a library. Project B is a web application that consumes that library. Whenever a patch is proposed to project A, Project B's CI system runs a test of Project B's software using Project A's master + proposed changes. Then the result of that test is reported back to the developers of Project A. In this way, Project B can inform Project A that the change would break Project B's use of Project A.  There are a number of different ways this can be configured, and a couple cool emergent behaviours with this. With the projects I am currently involved in, we are using some form of it with both gerrit and github. This presentation will present the idea, some configuration examples, and my vision for the future. I don't think this is 100% figured out, so I'll leave some time in the session for audience feedback and discussion. There are place where the tools we have need to be improved to support this, I'll call those out as well.  ":"Spencer (nibalizer) Krum has been sysoping Linux since 2010. He works for IBM contributing upstream to OpenStack and Puppet. Spencer is a core contributor to the OpenStack Infrastructure Project. Spencer coordinates the local DevOps user group in Portland and volunteers for an ops-training program at Portland State University called the Braindump. Spencer is a published author and frequent speaker at technical conferences. Spencer helped found the puppet-community effort, which attempts to bring together a network of developers, modules, and infrastructure.  Spencer lives and works in Portland, Oregon where he enjoys cheeseburgers and StarCraft II.  " OOO:Stuart Preston:Cross-platform Infrastructure testing with Microsoft Azure, Test Kitchen and InSpec:"One of the great misconceptions about the Azure platform is that it can only run Windows compute VMs, but did you know over 25% of all compute resource running in Azure is actually running Linux? Now that most popular distributions are supported in Azure, this makes it an ideal place to inexpensively perform cross-platform verification testing and this session will show you how.  We will take an in-depth look at how we can verify our ‘Infrastructure as Code’ across multiple platforms by using Chef, Test Kitchen and Chef’s new testing framework, InSpec.  ":"Stuart Preston is the Technical Director and co-founder of Pendrica, a technology consultancy based in the United Kingdom focusing on automation with Chef and the Microsoft Azure platform.  Over the last 2 decades he has specialised in delivering Infrastructure, Platform Architecture and Application Lifecycle Management consultancy at scale for various large organizations.  Stuart did the work to integrate Test Kitchen with Azure Resource Manager via his driver, kitchen-azurerm and is a keen supporter of Chef and Azure via his other open-source contributions. He is also writing a book “Using Chef with Microsoft Azure” which will be available in the first half of 2016.  " OOO:Matt Bruzek:Juju Charm Testing and Debugging:Software isn't perfect, and at the ability to observe what's going on on multiple hosts and clouds can be challenging. In this session we'll be going over how to debug your code, and how to leverage charm testing CI to keep your charm running in top shape on multiple clouds. :Hacker, Software Engineer, and Linux enthusiast, Matt Bruzek works for Canonical.  He is an Ubuntu community member and a Juju Charmer.  Matt's day job includes creating solutions with container technologies such as LXD, Docker and Kubernetes.  When not at work you can find him at the makerspace creating and destroying things.  OOO:Jorge Salamero Sanz:War Games - flight training for DevOps:"Here @ Server Density we monitor 100.000+ servers processing 2B metrics a day.  Downtime is critical for us, that's why we keep training to react to incidents. We organize our internal War Games were all engineers practice the processes involved in incident handling. We have seen how this improves the associated human factors, our processes and our tools.":Jorge co-founded Zentyal, a successful open source Exchange protocol interoperability company. He now drives Server Density evangelism, showing potential customers and community members best practices adopting DevOps practices and monitoring their infrastructure. When he's not writing monitoring plugins he's enjoying walks with his 2 dogs across the countryside.  OOO:Joao:"""Jenkins à la Travis""":"A lot of people use Jenkins, it’s probably the most used CI tool for private use. It's robust, versatile and not at all complex to use. However it lacks job management usability at scale. When you have to deal with more than 10 jobs, it starts to be a boring and error prone task.  What about using the same strategy that new CI tools are using? Like Travis for instance. Wouldn’t it be fantastic if we had a file in our code repository that Jenkins could recognise and execute jobs accordingly?  I'm proposing a different way of using Jenkins. Using an open source tool called Jenkins Job Builder and by 'eating our own dog food', I will share a versionable, modular and easy way of managing your Jenkins jobs. This enables you to configure not only CI but also CD with just a YAML file.":"João is a DevOps enthusiastic, working at the moment at Mindera, a Portuguese startup. In the last 3 years he have been committed to helping some companies like Betfair and TVG to embrace Continuous Delivery, improving their release process. He's an active contributor to some open source projects like Chef-Provisioning and Jenkins Job Builder.  In his free time, he loves to play Board Games, do sports or just trolling his friends." OOO:Sean OMeara:Test Driven Immutable Infrastructure:This talk explores how to apply classic Configuration Management concepts in a containerized world. Using the Chef tool chain, we will take a deep dive through building, testing, and orchestrating Docker containers. We will encounter common pitfalls, learn how to avoid them,	and possibly dispel a misconception or two.:Sean OMeara is developer on the Community Engineering team at Chef. He is obsessed with testing, clean code, and re-usability. He has an expired NT4 MCSE and thinks Solaris is cool.  OOO:Dominik Richter:"Skynet testing: InSpec from Solaris to Docker":Inspec is a new auditing and testing framework for your infrastructure. We will look at infrastructure testing with InSpec and show how to unify security and DevOps automation tests across your entire infrastructure. Write all your tests from Linux to Solaris, from metal to containers, or even the cloud, in a simple language.:"Dominik is an engineering lead for compliance at Chef, entrepreneur, and co-founder of the open-source hardening framework (http://hardening.io). He is deeply rooted in security and penetration testing, and combined them with the velocity of DevOps to form InSpec (https://github.com/chef/inspec). " OOO:Michael Goetz:Validation Driven Change:Test-driven development, Test-driven infrastructure, compliance, audit, Quality Assurance. There is a single thread that ties these together - validation of change. As we move toward a more unified development process, let's take a look at the similarities among these concepts. What happens to our understanding of quality if we combine and share efforts by looking at the entire process through the lense of validation driven change.:Michael is the Solutions Engineering Manager for Chef's Solution Engineering team, where he helps customers with distributed teams work safely and quickly with Chef to manage their infrastructure. He has several years of automation, systems and configuration management experience across many different types of businesses. An avid woodworker, Michael loves to spend time crafting furniture when he's not helping others solve their technical problems.  OOO:Raphaël Pinson:Puppet Test-Driven Development with Docker and Travis CI:"Infrastructure as Code implies applying to Infrastructure Code the quality rules we want to see in other development projects. This means testing.  As testing tools in the Puppet ecosystem have come to maturation, it has become possible to set up full test-driven coding environments. This talks presents a full examples of a Puppet module developed with a TDD approach, using Travis CI for Continuous Integration and Continuous Deployment.":"Raphaël Pinson is an Infrastructure Developer & Trainer at Camptocamp with a strong interest in Configuration Management and Systems Automation.  Involved in open-source communities for about 10 years through the Ubuntu project, he has been using Puppet and its ecosystem since 2008 and contributing to Augeas for just about as long." OOO:Shimon Shtein and Avi Tal:"Case study: Dynamic management of heterogeneous test environments using Foreman":"Testing distributed solutions usually require complex multi server environments.  Managing these kind of environments become a burden on CI engineers.  We'd like to present an innovative approach for automating the allocation process and simplify the resource management tasks.  By using Foreman we have eliminated the configuration differences between server types and supplied a unified configuration scheme for the entire setup.":"Shimon Shtein is a developer on Foreman team for the last year. He was a part of foreman-deployments: a plugin that enables definition of multiple resource manipulations and orchestration between them.  Avi Tal is a team lead of Container Management QE. He has experience in the field of Automation and DevOps as a developer as well as end user." OOO:Daniel Brachmann:CI with Ansible :"Tranistioning is never easy. Especially in an environment where it always has been done THAT way.  Let me take you along for a ride from a manual release and deployment process to a more automated one. This talk will be about introducing Ansible from the inside of a company and the challenges we faced.  I'm sorry about the late submission but I'm currently still talking stuff over with my boss about how much i have to anonymize.":Dev by profession, Ops by heart and Release Manager by necessity. Daniel has been wearing many hats and enjoyed most challenges that came with them.  OOO:Daniel Lobato Garcia:Hosts' lifecycle with Foreman and Ansible:"Ansible is a extremely easy to learn tool to orchestrate and configure hosts. However, managing the whole lifecycle of your hosts will require other tools for provisioning and monitoring at least. At the Foreman project we have found Ansible to be a fundamental tool on a lot of deployments for configuration, so we have started efforts to provide value to Ansible users.  This talk will show you what can you gain out of using Foreman with Ansible, including providing an UI for remote execution, hosts registration, provisioning, and more. By the end of it, you should at least be intrigued to consider using Foreman to complement your automat ion efforts with Ansible.":Daniel Lobato Garcia works as a software engineer at Red Hat and started the foreman_ansible plugin to allow Ansible hosts to register in Foreman and other integrations. He cares about making Foreman provide the maximum value for users and still being easy to deploy and use.  OOO:Charles Butler:Ansible and Juju sitting in a tree...:"Combine all the things! One of our newly formed web teams was at akward place. The ""ok what tool should we use?"" discussion came up. Some people liked config management tool A, some wanted B, and some wanted C. They were short on time so learning deep in any of these tools was an automatic no-op. Out of frustration they decided to try Ansible, but only invest a few hours into it so they don't go too far down the rabbit hole in case they changed their minds.  And in those few hours they were able to immediately prototype a working model that made the choice obvious. When combined with Juju we soon found a pattern of success that spread quickly and soon found it's way into production.  In this talk we'll cover our production Elasticsearch stack playbooks and charms and things we've learned from integrating all these tools together.  ":"Charles currently works on the Juju data center orchestration platform as a charmer. His prior work includes building the #5 Pittsburgh PA Digital Marketing Agency: Level Interactive, and performing community Q/A with many Open Source projects." OOO:Julian Dunn:Automating AIX With Chef:"New deployments of IBM AIX today are rare, yet many enterprises have a significant investment in in this platform. In IT, things that are working tend to not change, so we can expect these companies to run AIX for many years to come. How can we bring the benefits of modern configuration management technologies to an operating system that first appeared in 1986?  In this talk, I'll discuss the motivations behind developing Chef Client for AIX. We'll also see how members of the AIX community have rallied around using Chef as a modern solution for managing AIX logical partitions (LPARs) and what they are doing with it.":Julian is a product manager at Chef & started his career at the company in professional services. His first experience with Chef was at SecondMarket, a New-York based alternative markets startup. He has fifteen years of systems administration & software development experience at outfits large and small across such diverse sectors as advertising, broadcasting, Internet security and construction. When he's not helping customers, he enjoys good craft beer, indie music, and writing biographies about himself in the third person.  OOO:Michael Goetz:InSpec, or How to translate compliance spreadsheets into code:InSpec allows you to examine any node with controls that can written in simple form and then executed in an automated fashion as part of your software development process. We'll talk about the basic concepts of InSpec, how to write controls and how to use the reported output to take your compliance spreadsheets into a automated development world.:Michael is the Solutions Engineering Manager for Chef's Solution Engineering team, where he helps customers with distributed teams work safely and quickly with Chef to manage their infrastructure. He has several years of automation, systems and configuration management experience across many different types of businesses. An avid woodworker, Michael loves to spend time crafting furniture when he's not helping others solve their technical problems.  OOO:Kimball Johnson:Cluster Control with Chef Handler DSL:"This is a short demo of how the recent Handler DSL in Chef can be used to assist in doing maintenance work on a Cluster within a chef run,  without risking a complete outage.  ":"Kimball Johnson has been programming since a very early age, starting with BBC Micros, then MS DOS and Windows Systems, however was enlightened with a copy of Debian GNU/Linux Woody at university.  From this developed an affinity to Systems Administration, but like all good admins he is lazy and so tries to automate as much of his job as possible, and now follows the way of the Infrastructure as Code, most recently working for Chef Software Inc." OOO:Michael Moll:extending operating systems support of Foreman:"While Foreman is known to work very well with Red Hat and Debian based operating systems, support for others grew in the last year, leading to the possibilities to provision JUNOS switches or manage a Saltstack master on FreeBSD.  This talk will not only show how to extend Foreman to provision new operating systems and what's necessary to package foreman-proxy plugins and get foreman-installer's Puppet modules to work on operating systems like NetBSD or Solaris but will also show all this using the example of recent additions regarding FreeBSD support.":Michael Moll is one of the maintainers of the foreman-installer and its Puppet module collection and also caring about Foreman's Debian and FreeBSD packaging.  OOO:Nils Domrose:The good, the bad, the ugly - Deploying windows VMs with foreman:A less known and hardly documented feature of foreman is the ability to deploy windows VMs. With previous foreman releases apart from limitations that applied to image based deployments like resizing of volumes some workarounds where required to get things going. With recent releases the situation has improved significantly. This talk will detail how to deploy windows virtual machines in foreman 1.10 and later.:Nils works for Germany based inovex GmbH as a senior linux systems engineer and system architect. He designs and implements opensource software defined datacenter solutions. During the last 15 years Nils worked as a systems engineer and software developer for various ISP and Telco companies and designed and deployed several large scale, multi national services.  OOO:Greg Sutcliffe:There's a plugin for that...:"Since adding plugins as a way of extending Foreman a couple of years ago, we have a rich collection to choose from. Plugins represent a large part of our functionality now.  In this session, we'll take a tour around the popular, the hidden gems, the niche, and the upcoming plugins, as well as briefly talk about how to add your own if it's not already there. We'll also discuss the open question of how we can make available plugins more visible to new user.":Greg Sutcliffe has been a core Foreman developer for the last 3 years, and is an infamous author of hacky plugins to scratch itches. He's also the Community Lead, and is currently very interested in ways to promote plugins better OOO:Tomer Brisker:Extending the Foreman dashboard with plugins:This presentation will demonstrate the simplicity of creating a new widget for the Foreman dashboard from within a plugin.:Tomer Brisker is a software engineer at Red Hat, where he is a member of the Foreman development team. He has refactored the Foreman dashboard to allow for greater flexibility and customization.  OOO:Julien Pivotto:Demistifying the Foreman:"This talk will introduce shortly the Foreman as a software, how to get started with contributing to the Foreman, how to setup a development environment and play with Rails.  This talk is targeting people who want to start making contributions to the Foreman or setup quickly a test instance.":"Julien Pivotto is a young Open-Source consultant at Inuits where he is helping organisations with the deployment of long-term solutions based on Open-Source infrastructure.  He is a strong believer in the devops movement and has technical focus towards infrastructure automation, continuous integration, monitoring and high availability." OOO:Marek Hulán:Foreman and remote execution:"Foreman is used for provisioning and configuration of your infrastructure. With remote execution plugin it gets also ability to help with one-time tasks like installing a package, running a script at certain point in time, restarting a service etc.  In this talk I'd like to demo all features the plugin provides, explain the architecture and show how common tasks can be achieved.":Marek is software engineer in RedHat working on Foreman project. He works on multiple areas but lately he concentrated on remote execution plugin. He also works on Kafo side project and Chef integration with Foreman.  OOO:Ewoud Kohl van Wijngaarden:Foreman and PowerDNS:Foreman 1.10 introduces support for DNS modules. I took the opportunity to make use of my favorite DNS server and resolve an issue that was opened 2.5 years earlier. In this talk I will talk about my experiences writing the plugin and give a short demo.: OOO:Nils Domrose:infrastructure as code - foreman_provision:Foreman plays a central role in today's open source datacenter infrastructure. Although the webinterface is nice and the Hammer CLI is useful for basic scripting in order to  build complete deployment pipelines, you want all your infrastructure as code. This is what foreman_provision is about. This talk will detail the rational behind foreman_provision and will showcase how it might fill gaps in your fully automated infrastructure provisioning.:Nils works for Germany based inovex GmbH as a senior linux systems engineer and system architect. He designs and implements opensource software defined datacenter solutions. During the last 15 years Nils worked as a systems engineer and software developer for various ISP and Telco companies and designed and deployed several large scale, multi national services.  OOO:Shlomi Zadok:Security and Compliance reports in foreman:Introduction to Foreman Openscap which configures and runs OpenSCAP compliance & audit tests and reports in Foreman hosts:"Leading the development of foreman_openscap Foreman team member" OOO:Ohad Levy:State of Foreman:An overview of foreman development, where we are and where we are headed.:"Ohad Levy is the creator of the foreman project,  initially created it more than 6 years ago.  Ohad currently works at redhat as an engineering manager, responsible for the future development of the Satellite 6 product" OOO:Greg Sutcliffe:Foreman Community Update / Panel:"At the time of CfgMgmt '16, I'll have been in the role of Community Lead for just under 6 months. As such, it seems appropriate to reflect on the work so far, where our community is at, and what challenges are still to be tackled.  For the second part of the session, I'd like to invite some community members up on stage, and try to create some user-to-user Q&A.":Greg Sutcliffe has been a member of the Foreman community for 5 years, a core developer for 3, and was given the role of Community Lead in September 2015.  OOO:Philip Potter:Introduction to Nix and NixOS:"Many things can go wrong in a deployment. Dependencies can be missing, conflict, have the wrong version, or be present but not configured in the appropriate PATH environment variables. Further, a deployment might need to be rolled back, requiring a rollback in all dependencies.  This talk introduces and demonstrates nix, a package manager built from first principles to solve these problems.  It will also talk about NixOS, a linux distribution for declarative system configuration, with demonstrations.  ":Philip is a developer at the Government Digital Service in the UK. He has experience of being on dev teams and ops teams, and managing and provisioning infrastructure in diverse environments.  OOO:Bernd Erk:Apified Monitoring with Icinga2:The presentation will introduce the Icinga2 API and show some examples to place monitoring as an important and early part of your lifecycle. In addition to that it explains how different metrics and log information can be unified at a central spot while still using and relaying on the flexibility and power of the individual tools.:Bernd Erk is co-founder and community lead of the Icinga monitoring project. In his day job he is CEO of JETWAYS, an Open Source service company, and tries to take care of all the things that matter most, especially people. Bernd regularly publishes articles and presents on open source topics ranging across monitoring, community building and culture. In his spare time he fights for an iPad slot with his son.  OOO:James Shubin:Next Generation Config Mgmt.:"A presentation about a design for a next generation config management tool, and the specific problems this design solves.  Three of the main design features of the tool include: * Parallel execution * Event driven mechanism * Distributed architecture This talk will demo a prototype I've built that implements these ideas. It is written in golang, and is completely free software.":"James Shubin is is best known for his work on Configuration Management, his Technical Blog, Oh-My-Vagrant, (a tool he started) and other related DevOps friendly projects.  Besides being a Configuration Management expert, he can often be found giving talks on Puppet, Docker, GlusterFS, Vagrant, and cardiology.  As a self-proclaimed hacker, James has worn many hats including that of a System Administrator, IT/Network Architect, and Physiologist.  Besides his various speaking engagements, you can also read about his thoughts and ideas at the Technical Blog of James (https://ttboj.wordpress.com/).  James sometimes says things as @purpleidea on Twitter.  " OOO:Václav Pavlín:"Nulecule: Packaging, Distributing & Deploying Container Applications the Cloud Way":"Currently there is no standard mechanism for creating, distributing and deploying applications on containers. Applications that need orchestration for multiple containers and hosts require hand-crafted customization that is difficult to replicate and manage, not to mention time-consuming.  Nulecule is the specification for defining the packaged contents, including metadata, dependencies and orchestration providers, of container-based applications. Atomic App is the reference implementation of Nulecule that provides an easy method for packaging, distributing and running applications.  Nulecule + Atomic App feature: easy packaging into a single bootstrap container; change runtime parameters for different environments; package your application to run on OpenShift, Kubernetes, Docker and other providers; and create composite applications by referencing other Nulecule-compliant apps.":Václav is with Red Hat for 3 years and since he joined he worked with various groups on various projects (grub, systemd, OSBS, Fedora Distribution). He is active in Fedora and Cent OS community. He designed Fedora and RHEL Docker base images and helped with few others. Currently, he tries to figure out how to deal with complex multi-container applications.  OOO:Sean OMeara:Custom Resources in Chef:"It is an accident of history that the resources that ship in core Chef model OS objects like files and directories. As we move into the future, the nature of the what we need to manage is changing. Network APIs now let us test and repair everything from containers and networks, to Github and AWS user accounts.  This talk gives a brief history of resource implementation in Chef, then focuses on the new Custom Resources model introduced in 2015. We'll walk through resource design, implementation, testing, and avoiding leaky abstractions.  ":"Sean OMeara is developer on the Community Engineering team at Chef. He is obsessed with testing, clean code, and re-usability. He has an expired NT4 MCSE and thinks Solaris is cool.  " OOO:Jan Ivar Beddari::"Question was, are we going to move fully away from configuration management? In 2015 we realized what we had been doing wasn't easy or fast enough to reproduce. It took 20 minutes or more to fully converge 10 different services towards their know state just to get a working system. Development time increased, frustration was rising, it was just not an elegant way of doing what we wanted - testable, repeatable builds of infrastructure.  What did we change? Did we go all in, start killing immutable whales? No, we reused what we knew would work. Through redefining our abstractions we could solve our immediate problems and get ourselves in a much better position for the future. Even better, all the tooling we needed was already there. This is a quick glimpse into how we made ""repeatable builds"" actually work for infrastructure.":"Jan Ivar Beddari is an automation pragmatist that truly believe datacenters will be physically built by robots 10 years from now. Living several years with Puppet, bash and Python his latest project has been designing an academic community Openstack solution - which without Hashicorp' tooling would have been pretty much dead in the water.  He currently loves chatting about how BGP will save the networking world from SDN." OOO:Raphaël Pinson:Configuration Surgery with Augeas:"When managing configuration on nodes, a common need is to edit configuration files. In order to achieve this in a clean way, a clean, OS-agnostic, tool-agnostic API is necessary. This is were Augeas chimes in.  Whichever tool you are using for your CM needs, Augeas can help you manage configuration stanzas in a clean and safe way.":"Raphaël Pinson is an Infrastructure Developer & Trainer at Camptocamp with a strong interest in Configuration Management and Systems Automation.  Involved in open-source communities for about 10 years through the Ubuntu project, he has been using Puppet and its ecosystem since 2008 and contributing to Augeas for just about as long." OOO:Aditya Patawari:Picking the right config management tool:"Config management is important to create repeatable and scalable systems. However, with so many choices of tools out there, how would one decide what is the right tool for the job? This talk will walk the audience through the process of evaluating and picking the right config management tool to get the job done in right way.  I will discuss the benefits and drawbacks of 3-4 most popular tools including Puppet, Ansible and Chef. We will see sample setups and try to understand the learning curve and benefits of each tool.":"I am Aditya Patawari, a DevOps consultant. I play around with Enterprise Linux, Ansible, Puppet, Nagios, Python, Cloud (AWS and OpenStack) both as a part of my work and out of interest.  I am an active contributor to Fedora Project, specifically to Cloud Working Group and Infra team. I am primary maintainer for fedora-dockerfiles package and have contributed to several projects in config management and container ecosystem.  I have been a speaker at Flock, FUDCon, NELF, GNUnify, Rootconf, FOSSAsia, Devops Days, CentOS Dojo and have delivered talks on Puppet, Ansible, Project Atomic, Kubernetes, Docker, Git, infrastructure scalability and various other topics." OOO:Remy DeCausemaker:Open Infrastructure at Fedora:In this talk I will quickly mention the details of how Fedora uses Ansible Playbooks for our internal infrastructure, and how we can make them entirely public. I'll also discuss some of the additional constraints and considerations of allowing external and sometimes brand-new Apprentice Infrastructure contributors to access our systems in a tiered access way.:"At the <a href=""http://fedoraproject.org"">Fedora Project</a> Remy serves as Community Action and Impact Lead, bringing more heat and light to the distro's user and contributor base. As resident Hackademic, Remy leads the <a href=""https://fedoraproject.org/wiki/Council"">Fedora Council's</a> <a href=""https://fedoraproject.org/wiki/Objectives/University_Involvement_Initiative"">University Involvement Initiative</a>, expanding and replicating the models used in RIT's courses on <a href=""http://hfoss-ritigm.rhcloud.com"">Humanitarian FOSS Development</a> and <a href=""http://bizlegfoss-ritigm.rhcloud.com"">Business/Legal Environment of FOSS</a> that built <a href=""http://www.rit.edu/news/story.php?id=50590"">the first academic minor in FOSS and Free Culture at a university in the United States</a>. With help from <a href=""http://www.sugarlabs.org/"">Sugarlabs</a>, <a href=""http://teachingopensource.org"">TeachingOpensource</a>, <a href=""http://softwarefreedom.org"">The Software Freedom Law Center</a>, <a href=""http://alephobjects.com"">Aleph Objects</a>, and many others, Remy brings <a href=""http://opensource.com/open-source-way"">The Open Source Way</a> to campuses, conferences, and campaigns everywhere he can. You can keep up with his story via <a href=""https://twitter.com/remy_d"">Twitter</a> and his <a href=""http://decausemaker.org"" title=""decauseblog"">decauseblog</a>." OOO:::: OOO:Spencer Krum:Better Together! Puppet and Ansible:"On the OpenStack Infrastructure team, we fire our Puppet runs from Ansible. We split the responsibilities of these tools: Puppet performs configuration management, Ansible performs orchestration. In this talk, we'll talk about what prompted us to create this system, what we've been able to do with it, and where we are going next. We'll describe the setup of our systems and network. We'll also show you some things that we tried that didn't work, so that you don't have to make the same mistake. Everything you see in this talk is 100% Open Source and running live on the OpenStack Infrastructure servers. We've developed some high level patterns that you can take back to your sites to start using immediately.  What you will learn: What (in our opinion) Puppet and Ansible each do best.  How to compose configuration management tools.  How to develop, store, and run your config mgmt code in the open.  How to consume other Open Source Ansible playbooks and Puppet modules.  What it looks like to layer them more than once.":"Spencer (nibalizer) Krum has been sysoping Linux since 2010. He works for IBM contributing upstream to OpenStack and Puppet. Spencer is a core contributor to the OpenStack Infrastructure Project. Spencer coordinates the local DevOps user group in Portland and volunteers for an ops-training program at Portland State University called the Braindump. Spencer is a published author and frequent speaker at technical conferences. Spencer helped found the puppet-community effort, which attempts to bring together a network of developers, modules, and infrastructure.  Spencer lives and works in Portland, Oregon where he enjoys cheeseburgers and StarCraft II.  -- Monty Taylor currently works full-time on OpenStack for IBM. Monty leads a team that works on running the Developer Infrastructure systems for the project, as well as other pure-upstream development efforts. Monty is a past Program Technical Lead of the OpenStack Infra Program and set up the original project gating infrastructure. Monty currently sit on the Technical Committee for OpenStack. Previously, Monty was a core developer on Drizzle and was a Senior Consultant for MySQL, Inc. Monty has been a Python hacker by choice since 2000, and is currently a member of the Python Software Foundation.  Monty has a degree in Theatre Directing and went to grad school at CalArts in lighting design. The intersection of fields has led him to start more than one business around developing technology for and related to live performance. Monty continues to work in the theatre, and regularly lights shows in New York, Seattle and Austin.  " OOO:Brian “Redbeard’ Harrington:"How CoreOS is built, modified, and updated: From repo sync to Omaha.":"Traditional Linux distributions are updated via one of two methods: utilizing package managers like RPM, apt, or pacman or good old ""config, make, make install."" We will analyze how atomic CoreOS updates are developed, packaged, and distributed in order to sign an image and distribute it to the masses.":"Brian Harrington, also known as Redbeard, is a principal architect at CoreOS.  He is developer, hacker, and technical writer in the areas of open-source development and systems administration. His time spent in both defensive and offensive computing have combined with his readings of classical anarchism to present new ideas in organizational hierarchies for software development. He has been featured on Al Jazeera as an expert in the field of computer security, and has been seen and heard on Bloomberg Television and National Public Radio. He currently resides in Oakland, CA and was grudgingly elected president of the hackerspace HacDC.  " OOO:Matt Bruzek:Rolling out and Managing Kubernetes:"Kubernetes is an open-source platform for automating deployment, scaling, and operations of application containers across clusters of hosts. With Kubernetes, you are able to quickly and efficiently respond to customer demand: - Scale your applications on the fly - Seamlessly roll out new features - Optimize use of your hardware by using only the resources you need At Ubuntu we have been working on enabling our users to deploy Kubernetes in a repeatable, testable, and scalable manner on any cloud they want (including bare metal) In this talk we will: Show you how to deploy a Kubernetes cluster on Ubuntu via Juju.":Hacker, Software Engineer, and Linux enthusiast, Matt Bruzek works for Canonical.  He is an Ubuntu community member and a Juju Charmer.  Matt's day job includes creating solutions with container technologies such as LXD, Docker and Kubernetes.  When not at work you can find him at the makerspace creating and destroying things.  OOO:James Page:Building a private cloud with the OpenStack charms:OpenStack is one of the most complex pieces of software an admin can deploy today. This instruction session will include not just deploying a cloud, but lifecycle management. We'll cover upgrades, data backup, and networking considerations.:James as been involved in Open Source software since 2000, evangelising and delivering the use of Free and Open Source technologies in a major UK bank. In 2010, James discovered Ubuntu and became involved in both the development of Ubuntu and shortly afterwards OpenStack. James is part of the team responsible for delivering and supporting OpenStack as part of every Ubuntu release and for the Juju Charms for OpenStack, the best way for deploying and managing OpenStack deployments on Ubuntu at any scale.  OOO:John Billings:Service discovery at scale using SmartStack:"At Yelp we’ve moved to a Service Oriented Architecture in order to scale our development process, and we’re now running over 70 production services across thousands of machines in multiple datacenters.  One key piece of infrastructure that has enabled this transition is SmartStack, a service discovery system built by Airbnb that uses Apache ZooKeeper and HAProxy.  In this talk we introduce the general concept of service discovery and describe the set of requirements that led us to choosing a service discovery system based upon Apache ZooKeeper and HAProxy.  We then discuss specific challenges and features of our service discovery system that should be relevant to anyone interested in building or running a large-scale service discovery system.":For the past five years, John has worked on backend systems at Yelp in a variety of lead roles, ranging from re-architecting the search sharding model to replacing the main job queuing system.  Prior to this, John received his PhD in Computer Science at the University of Cambridge, where he researched the specification and compilation of internet routing protocols.  OOO:Julian Strobl:Platform orchestration with Kubernetes and Docker:"Big companies like Google containerize theirs environments for easier maintaining, scaling, and reliability. This talk gives an introduction how to build such an environment and maintain applications written in distinct programming languages.  The container orchestration is done with Kubernetes by Google and Docker containers. For mass deployment CoreOs is used.  ":"Julian Strobl owns a Master's degree in Information Engineering and works at Endocode AG, Berlin, Germany. After finishing his studies in Cologne, Germany he left his hometown to work on a secure mobile platform. for a big telecommunication company located in Berlin.  After the project ended, he started to work on platform orchestration with Kubernetes and Docker." OOO:Marco Ceppi:Designing Charms:Opening your editor and writing code right off the top of your might sound like a good idea, but there are many design patterns that experienced charm authors have learned by running charms in production. This talk will cover the architectural and scalability decisions you must make before writing code, and how you can reuse many of the patterns from people who have experienced it first hand:Marco Ceppi is the technical lead for the Juju Ecosystems Team. He's a senior Linux System Administrator and Lead Developer with over nine years professional development experience and over five years of experience in Systems Administration. His current passion is the marrying of development and operations.  OOO:Cory Johns:Writing Your First Juju Charm:Reusing someone else's charm for a piece of open source technology is an excellent way to get a bunch of work done with little time, but at some point you'll need to get your custom code running on a cloud too. In this tutorial we'll learn how to combine your application with reusable charm layers so you can leverage existing best practices for common technologies while giving you the means to customize your deployment.:Cory has been working on the Juju ecosystem since 2014, contributing charms, tools for developing and maintaining charms, and generally improving the experience working with Juju. He is currently focused on developing big data charms, and building up the layered and reactive approach to charm development.  OOO:Marco Ceppi:Benchmarking Clouds:"Benchmarking individual systems is pretty much a solved problem. Today however, with the complexity of the cloud it becomes much more complicated. Dozens of services, running on systems in which you might not even control the hardware or hypervisor.  Cloud providers will happily publish synthetic benchmarks for you to ponder, and the more sophisticated ones will publish benchmarks for common tools like MySQL and Cassandra. But what about for all of your applications? What if you could know for certain what adjustments you made across a multiple node deployment improved or degraded performance?  The answer of course is automation. (You wouldn't be at this conference otherwise!) In this talk we're going to show you how we do it across multiple clouds. ":(same as other submission) OOO:Uchit Vyas:Scaling under pressure:"This is the story of a company that had 10s of customers and were facing severe scaling issues. They approached us. They had a good product predicting a few hundred customers within 6 months. VCs went to them. Infrastructure scaling was the only unknown; funding for software-defined data centers. We introduced Terraform for infrastructure creation, Chef for OS hardening, and then Packer for supporting AWS as well as VSphere. Then, after a few more weeks, when there was a need for faster response from the data center, we went into Serf to immediately trigger chef-clients and then to Consul for service monitoring.  Want to describe this journey.  Finally, we did the same exact thing in at a Fortune 500 customer to replace 15 year-old scripts. We will also cover sleek ways of dealing with provisioning in different Availability Zones across various AWS regions with Terraform.":"Uchit Vyas is a Cloud Automation Lead at Opex Software. Uchit works with large IT organizations to automate traditional datacenters and development flow, explores new-age tools and technologies, defines solutions and best practices for small and large enterprises.  He is has authored four books on Mule ESB, Mastering AWS Development, AWS Development Essentials, and AWS DynamoDB." OOO:Miguel Fonseca:Cooking on the cloud - An immutable experience:"We wanted to: - Leave bare metal behind.  - Go for immutable services on AWS.  - Re-use all of the cookbooks we already coded.  As experienced Chef users we decided to give Chef-Provisioning a try, and with a little bit of help from Jenkins, some nifty hacks, and a handful of upstream contributions the outcome has been pretty great.  It has never been so cool to watch our CD pipeline build and destroy our application’s infrastructure. It's so awesome that we want to share it with you.":"Miguel is currently a systems engineer at Mindera, who spends his days infra-coding, building and breaking systems, and monitoring all the things.  He has been a Chef user for more than 3 years, led Chef development practices at Betfair and most recently has been using and contributing to Chef-Provisioning in order to enable dynamic AWS infrastructures.  Likes coding, music and videogames, not necessarily in that order.  He sometimes can be found @miguelcnf." OOO:Tomáš Strachota:Deploy and orchestrate multiple machines with Foreman Deployments:"Foreman Deployments is a plugin into the Foreman that allows for creating infrastructure descriptions that can be repeatedly deployed with different configuration. Infrastructure is described as set of tasks that need to be performed in order to achieve the expected setup and dependencies between them. This opens wide range of orchestration possibilities from provisioning a single host with additional tasks to deploying complex multi-host infrastructures.  The talk will cover: - High-level overview of the plugin architecture - Use cases and demonstration of the current features - Possible directions of the future development":Tomáš is a Ruby developer who has been working as a part of the Foreman team for 4 years now. Apart from developing and maintaining the Hammer CLI his focus is currently on bringing multi-machine deployment functionality into the Foreman.  OOO:Jorge Castro:Introduction to Juju:This introductory talk will include installation of Juju and configuration on multiple clouds. We'll also cover Juju terminology and basics, as well as a primer on how to leverage Juju to integrate with other configuration management tools.:"Jorge O. Castro currently works on the Juju Ecosystem Team as Cloud Community Liaison for Canonical Ltd, sponsors of the Ubuntu project. He’s been using Linux since 1998, and his current passion is Juju, the new cloud modeling tool from Canonical.  Having graduated with a degree in Telecommunications from Michigan State University and riding with the 11th Armored Cavalry Regiment for four years, got into technology at SAIC and then moved to system administration at the School of Engineering and Computer Science at Oakland University in Rochester Hills, Michigan. He now resides in Ann Arbor, Michigan with his lovely wife Jill, and their beagles, Oscar and Luna. Hobbies and interests include heavy metal, paleontology, vermiculture, technology, and scouting out the best beers in the world." OOO:Kevin Monroe:Modelling big data deployments in the cloud:"There's a flood of open data out there from organizations and governments large and small.  With such easy access to this, solving common big data problems seems simpler than ever before.  Got a problem with traffic, weather, or money?  Analyze the right datasets, and you just might learn that 2pm on a sunny Tuesday afternoon is the best time to drive to the bank.  Thanks Big Data!  The rub with trying to solve these problems is in the deployment and configuration of all the services that need to work together to get to an answer.  Wouldn't it be great if there was an easy way to model a Big Data platform (complete with ingestion, processing, and visualization components), stand that up in a cloud, and get down to business?  ""Yes"" is the right answer, and fortunately, Juju does just that.  ":"Kevin started working with Linux when Tupac was still making albums (and not the posthumous stuff). Projects during his tenure at IBM covered a wide range of development, from tiny embedded operating systems to Linux enablement of the POWER8 hardware platform.  Kevin moved to Canonical in 2014 with his focus set on modeling workload deployments at scale. He found his niche on the Juju Big Data team, where his mission is to wrangle the cumbersome install and configuration of Big Data services (Hadoop, Spark, Kafka, etc) into real world solutions.  " OOO:Sam Bashton:Even in the cloud, one size doesn't fit all:"Everyone knows 'the cloud' is all about 'immutable infrastructure', don't they?  Maybe not.  This talk draws on the experiences of working almost exclusively in AWS for the past four years, and the wide range of approaches used to build infrastructure within it.":Sam is the founder of Bashton Ltd, a UK based cloud consultancy firm and AWS partner. Pioneer of the 'opsvelopment' movement, Sam was mortified to have been beaten to a snappier portmanteau by the most unlikely of candidates - Belgians.  OOO:Mattias Geniar:"Managing Zabbix With Puppet: Exported Resources & Zabbix API":This talk will describe a way of automating your Zabbix monitoring through Puppet's use of exported resources. It will describe the patterns used and the lessons learned from automating 5 to 1500 servers with Zabbix's API to auto-extend the monitoring of each server.:Mattias is a web enthusiast, focussing on everything Open Source, PHP, Security, DevOps & Automation. After 10+ years of being a web developer, he made his way to the dark corners of Linux & Windows system administration.  OOO:David Lutterkort:Puppet Application Orchestration:"We recently added orchestration capabilities to Puppet that expand Puppet's facilities for managing individual nodes to managing entire sets of nodes in an application-centric manner. It is now possible to describe application blueprints that can easily be shared and, in a separate step, instantiate these blueprints in your infrastructure. Underlying that are new language facilities that decouple the configuration of a service from its use and that connect application components using these service resources to form entire applications. The collection of application instances and nodes form the environment catalog that generalizes the existing node catalog and expresses relationships between nodes. These facilities are entirely additive and designed to make it easy to enhance existing code without requiring complete rewrites.  This talk will discuss modeling of applications in Puppet, the plumbing built into Puppet to perform orchestration and show how it can be used to run Puppet in an entire environment following dependencies in the environment catalog.":"David is a principal engineer at Puppet Labs and the technical lead for Puppet Labs' development of application management, and used to lead the development of Razor, the best provisioning tool, ever. Before joining Puppet Labs, David worked at Red Hat on a variety of management tools and served as the maintainer of Apache Deltacloud. He was one of the earliest contributors to Puppet, and is the main author of Augeas, a configuration editing tool.  " OOO:David Boucha:Beyond Config Mgmt with Salt!:"SaltStack is a system management platform written in Python. In this session, we will assume basic system administration skills and a familiarity with common DevOps concepts. We will briefly review a couple architecture layouts, but will quickly jump in to Salt's advanced features. Specifically we will discuss Salt's Beacons for system monitoring, Salt's Event system, Salt Reactors, as well as Salt-API (Salt's native REST api).  We will do a live demo of using a Salt Beacon to send Salt Events when there is a system change and display that change on a dynamic dashboard that watches Salt's Event Bus for certain messages. The audience will be able to participate by sending events to this Salt demo server from their cell phones and see them displayed live on the dashboard.":David Boucha is a Sr. Engineer at SaltStack, inc. David is one of the three original engineers SaltStack hired at its founding and has been involved in many aspects of Salt's growth, including core Salt features, support for the Windows platform and consulting and training some of the world's largest tech companies on using Salt.  OOO:Arnold Bechtoldt:Automated Application Deployment with SaltStack Orchestration:SaltStack is a new System Management Platform that provides various automations for the lifecycle of systems (HW/VMs). This makes it possible to trigger routines based on specific events using Salt Reactor. The event-based orchestration component of SaltStack recognizes f.e. the adding of new Salt minions (agents) in the Salt host inventory/database, the start of minions after the first system booting, the execution of any (distributed) commands (local or master-triggered) and much more. You can use this framework to provision newly created hosts/VMs with packages and configuration files, or to fully automate the rollout/deployment of new software releases and pre/post actions (DB backup, schema update, removal von temporary files, etc.).:Arnold is a Systems Engineer at inovex GmbH working in exciting projects with great open source software and is involved in building automated infrastructure management setups running complex applications.  OOO:Kerim Satirli, Chris Grigor:Engineering for Failure:"Config management tooling makes it easy to install software and set-up services. Testing, on the other hand, is still a lot harder than it should be. In a way, we engineer for success, hardly testing our hypothesis. After all: with quick iterations, you can easily re-run a failing playbook.  We recently deployed a a new tool that required a different approach: instead of trusting that Ansible would be able to do what we need it to, we engineered all plays for failure. Taking into account that any of the moving parts could fail, we built the project with failure in mind.  In this talk, we look at the steps we have taken to make our playbooks more stable, how we handle alerting and what we have learned from the whole process.":"At IceMobile, Kerim is part of a team of automation engineers and helps the company by stewarding the introduction and expansion of DevOps like techniques and practices. In the past, Kerim built web applications for advertising companies, worked on a content management system that was used by the top museums of the Netherlands and helped make music and video more accessible for a number of start-ups.  From installing IP-scramblers in Cold War bunkers to deploying software on Windows in Johannesburg, Chris has seen a lot during his tenure as an integration architect. Now, at IceMobile, Chris wrangles a multi-faceted team of engineers while fighting the good fight of not becoming an armchair general. Ansible is his current weapon of choice." OOO:Chris Grigor, Kerim Satirli:From the kitchen to the playing field:"Configuration management is something very personal. It has to take into account what your tool, application or business is about and be able to cater to its needs. Preferably without wasting precious resources like development time.  At IceMobile, we stumbled upon the classic disconnect between software- and infrastructure engineering: while our ops team was toiling away at Chef cookbooks, our developers were successfully deploying their first containers using Ansible.  Transitioning from one config management system to another is a labor-intensive process that helps you re-evaluate what is and should be important. In this talk, we would like to share the ""wins"" and pitfalls of our journey with you.  ":"From installing IP-scramblers in Cold War bunkers to deploying software on Windows in Johannesburg, Chris has seen a lot during his tenure as an integration architect. Now, at IceMobile, Chris wrangles a multi-faceted team of engineers while fighting the good fight of not becoming an armchair general. Ansible is his current weapon of choice.  At IceMobile, Kerim is part of a team of automation engineers and helps the company by stewarding the introduction and expansion of DevOps like techniques and practices. In the past, Kerim built web applications for advertising companies, worked on a content management system that was used by the top museums of the Netherlands and helped make music and video more accessible for a number of start-ups." OOO:Lukas Zapletal:Hardware discovery with Foreman and Salt:Unattended bare-metal provisioning with Foreman Discovery and Salt plugins including demos of fully automated PXE and semi-automated PXE-less workflows.:Lukas Zapletal is Foreman core team contributor focusing on provisioning and metal as a service.  OOO:Alexandru Loredan Stancu:AWS Provisioning using puppet:"The presentation will be focused on AWS provisioning using Puppet. It will contain example and design patterns of creating aws resources like ec2 instances, vpc, route53 and others.  Hiera will be also included in the presentation which will be the next level in creating complex provisioning setups.":"- Works as an TechOps Engineer; - 5 years experience with Puppet; - Puppet Certified Professional with experience in managing big infrastructures on AWS cloud; - The organizer of Puppet User Group in Bucharest; - LPIC certified with 8 years Linux Sys Admin experience.  " OOO:Peter Souter:Lock it Down - Securing your Puppet Infrastructure:Puppet is an awesome tool to automate the configuration of your infrastructure, but it's also a potential attack vector. In this talk, we'll discuss some common patterns and changes you can make to harden your Puppet infrastructure, from the basic good practises such as data abstraction in modules, to some advanced customisation you might need in a high-security setup.:Peter is a Professional Services Engineer at Puppetlabs, interested in the security implications of Puppet Infrastructure in high-security deployments, such as financial institutions.  OOO:Alexandru Loredan Stancu:The Future Parser:Presentation will be focused on exploring new features introduced by puppet feature parser and showing some strategies to migrated from old parser.:"- Works as an TechOps Engineer; - 5 years experience with Puppet; - Puppet Certified Professional with experience in managing big infrastructures on AWS cloud; - The organizer of Puppet User Group in Bucharest; - LPIC certified with 8 years Linux Sys Admin experience." OOO:Alexandru Loredan Stancu:Puppet architecture for 2000 nodes using AWS infrastructure:"Creating an Puppet architecture for 2000 nodes in AWS can be challenging and can lead to unwanted complexity if it's not designed in the right way.  Presentation will show how to create such an architecture and will include puppet setup, hiera design, dynamic facts but also roles and profile design pattern.":"- Works as an TechOps Engineer; - 5 years experience with Puppet; - Puppet Certified Professional with experience in managing big infrastructures on AWS cloud; - The organizer of Puppet User Group in Bucharest; - LPIC certified with 8 years Linux Sys Admin experience." OOO:Alessandro Franceschi:Essential Application Management with Tiny Puppet:"Tiny Puppet is a Puppet module that allows management of virtually any application on any Operating System.  It’s based on the assumption that its user knows and wants to control how to shape the managed application’s configuration files and provides another abstraction layer in the Puppet stack.  The talk outlines Tiny Puppet's usage patterns, how it's designed and can be improved adding support for new applications and Operating Systems.  It will show how to manage applications on Puppet in the way we want in the quickest way possible.":"Long time Puppet user, he has seen, managed and designed, over more than 8 years, dozens of Puppet infrastructures of any size and nature.  He has written more than one hundred modules, under the Example42 name, based on reusability patterns and common structure coherence.  Then he decided that maintaining and updating them at good levels was almost impossible for a single person, so he wrote Tiny Puppet with the intention to replace most of them.  He also the author of the book ""Extending Puppet""," OOO:Liam Bennett:Config Management for Services:We’ve all been doing config management for a while now. We manage our nodes. Some of us manage our network devices and/and containers. But what does it really mean to step outside the node? How do we manage things that we don’t have direct access to? How does that connect to our orchestration pipeline? This talk looks into how we manage API-driven services using the puppet DSL, goes through some existing examples and discusses where this overlaps with other tools and puppet’s future.:Liam Bennett is an Senior Engineer for OpenTable focused on designing and implementing the infrastructure and tools used by OpenTable’s developers every day. Prior to OpenTable Liam has been a release engineer and developer for several organisations but jumped into operations a few year ago.  OOO:David Schmitt:Better Puppet Module Testing:"rspec-puppet, beaker, beaker-rspec, rspec-puppet-facts, betterspecs, rspec-mocks, mocha, puppetlabs_spec_helper, unit testing, integration testing, acceptance testing, black boxes, white boxes, nodesets, WHAT?  Tools galore, but no guidance? Many modules have some form of testing, but good examples are sparse. Join here for an account of the current state-of-the art with practical tips and tricks to get your modules ready and tested before someone tries them in production!  This talk is for core infrastructure developers whose code will be widely deployed, used across multiple teams, published on the forge, or if you just subscribe to Larry Wall’s Hubris: The quality that makes you write (and maintain) programs that other people won't want to say bad things about.":"David is programming since 1995, developing software since 2001, working with puppet since 2006, and working for Puppet Labs since 2015. His passion is building stuff that not only works, but actually solves problems for people.  " OOO:Gareth Rushgrove:Automatically Generating Puppet Types and Providers:"Everyone who has used Puppet has probably written a Puppet module. But far fewer people have delved into writing their own types and providers - doing so requires a good grasp of Ruby and of the Puppet APIs. This is complicated further by the size and complexity of the software we want to manage. Is there a better way?  Code generation is a well used technique in other areas of software development and works particularly well where strong APIs exist. This talk will look into how we might be able to auto-generate Puppet types and providers. We will: * Show some early examples of generating code involving the Swagger API specification and PowerShell DSC * Talk through some of the pros and cons of code generation, and how defined types allow us to work around down of the downsides * Make recommendations for anyone building software on making your tools friendlier to autogenerated types ":Gareth Rushgrove is a senior software engineer at Puppet Labs. He works remotely from Cambridge, UK, building interesting tools for people to better manage infrastructure. Previously he worked for the UK Government Digital Service focused on infrastructure, operations and information security. When not working he can be found writing the Devops Weekly newsletter or hacking on software in new-fangled programming languages.  OOO:Raphaël Pinson:A Fully Tested Dockerized Puppet Infrastructure:"Installing a Puppet CM system always starts with setting up the Puppet Master infrastructure. This is a complex task. Various installers exists, and managing the infrastructure on the long run is easier task either.  At Camptocamp, we have decided to dockerize the whole Puppet server stack to deploy it without the help of Puppet, and ease its scaling and updating. At the same time, we have set up automated and tested builds for each of the containers of the stack, using Travis CI, as well as automated deployments to Docker Hub.":"Raphaël Pinson is an Infrastructure Developer & Trainer at Camptocamp with a strong interest in Configuration Management and Systems Automation.  Involved in open-source communities for about 10 years through the Ubuntu project, he has been using Puppet and its ecosystem since 2008 and contributing to Augeas for just about as long." OOO:Raphaël Pinson:Streamlining the r10k workflow:"R10k is a great tool to set up a Puppet workflow. It does however requires some set up, and utilities to ease its usage.  At Camptocamp, we've developed a set of open-source tools to go hand-in-hand with r10k. These tools cover tasks such as updating the Puppetfile, keeping an eye on new versions of modules, issues & PRs on modules, as well as testing and validating module updates.":Gah, I was copying/pasting, and I lost my buffer... Can you copy it from other submissions I made please?  OOO:Raphaël Pinson:Test everything with Puppet Policy:"Testing your Infrastructure code as you develop is good. Testing it as you deploy is even better.  This talk presents the Puppet Policy module, which provides plugins allowing to test Puppet catalogs before applying them, test the node state after applying the catalog using serverspec, and even generate serverspec tests automatically from the catalog. It also allows to launch such tests over MCollective to generate conformity reports.":Please refer to previously submitted talks as I lost my bio buffer.  OOO:Raphaël Pinson:Developing partial file providers with Augeasproviders:"The Augeas type has been present in Puppet for a very long time. However, it is often hard to use, and even harder to make converging resources for complex configuration files.  The Augeasproviders project aims to ease the use of Augeas by providing native Ruby types and providers for Puppet, powered by the Augeas Ruby bindings under the hood. Augeasproviders comes as a library which can be used to write new Augeas-based providers, making it easy to write clean and well tested partial file Puppet resource types.":I lost my speaker bio buffer. Please refer to previously submitted talks.  OOO:Ryan Senior:PuppetDB - What Not to Store:"There's two sides to PuppetDB, the storage of Puppet node data and the querying of that data. PuppetDB is as much about what not to store as it is about what to store. As an example, a typical 5,000 node install of Puppet sends almost 250,000 catalogs, reports and factsets to PuppetDB every day. Extending this example to resources, assuming each node has approximately 500 resources, PuppetDB sees nearly 120 million resources per day from catalogs alone. PuppetDB also has users that are 10 times the size of this example. PuppetDB can't efficiently store all of this data. Also most of the time there are no or very few changes from Puppet run to Puppet run. This talk is a deep dive into the internals of PuppetDB to see how PuppetDB spots change in a catalog and minimizes the database I/O related to the change. This talk will also cover how we store structured facts and how we lean on Postgres for efficient querying and storage.":Ryan Senior leads the development of PuppetDB at Puppet Labs. He's been writing software in Clojure for 6 years and has been working on PuppetDB for last two years. He also helps organize the Strange Loop conference in St Louis, Missouri.  OOO:Ryan Senior:Querying PuppetDB:"PuppetDB is a Puppet node metadata repository. All of the nodes managed by Puppet can be stored in PuppetDB. This includes run-time data, the graph of resources for a node and how that node has changed over time. This talk will focus on PuppetDB's query capabilities, navigated by example queries. Although PuppetDB has always supported querying, the past year has brought many new features to the query API. This talk will focus on many of these new query features. I'll discuss the new query engine, new queryable fields, entities and some new query operators. I'll also discuss the new PuppetDB Query Language, a new, more user-friendly language for querying PuppetDB (currently in development).  ":"Ryan Senior leads the development of PuppetDB at Puppet Labs. He's been writing software in Clojure for 6 years and has been working on PuppetDB for last two years. He also helps organize the Strange Loop conference in St Louis, Missouri." OOO:Craig Dunn:Solving real world data problems with Jerakia:Jerakia is a pluggable policy based data lookup tool designed to be used by configuration management systems such as Puppet to solve some of the more complex edge cases around data separation.  It can be used with, or as a drop in a replacement for Hiera.  This talk will introduce Jerakia and include some demos to show off some of it's powerful features and explain how it can be extended using it's versatile plugin system.:"Craig Dunn is a long time Puppet user since 2008, previously employed as a Professional Services Engineer for Puppet Labs. He has spoken previously at Puppet Camp events.  He is well known for conceptualizing the popular ""roles/profiles"" design pattern used by most Puppet users today, as well as maintaining several open source projects such as hiera-http, hiera-mysql, hiera-gpg and more recently, Jerakia." OOO:Walter Heck:"War Story: Puppet in a Traditional Enterprise":"This talk will discuss the implementation of puppet across 15000 servers in a very traditional enterprise organisation. This involved 20 teams of people new to puppet. On top of that 70% of servers were Windows, making this quite an interesting challenge.  The talk will outline the experiences in onboarding puppet in this enterprise environment. Things that worked, things that didn't work and everything in between.":Walter Heck is one of the co-organisers of config management camp, co-chair of the config management devroom at FOSDEM and an avid promoter of Open Source software.  OOO:Henrik Lindberg:The Truth, Nothing but the Truth, Why Type Systems are important to Configuration Management:"The Truth, Nothing but the Truth, Why Type Systems are important to Configuration Management Configuration Management is about automating the production of computer system configurations - this is inherently complex but can be made easier by creating reusable and composable components using a configuration management tool / domain specific programming language. It is important that the configuration authored in such tools is correct - we do not want to turn our server park into a field of smashed pumpkins. The earlier we know if our configuration states what we intended, the faster and more reliable we can make changes.  In this talk we will: Introduce the concept of a Type System and how it relates to human thinking and communication - why do we call a spade a spade Touch on the characteristics of untyped languages, duck typing, strict types, type inference and more, as well as talk about the influence of functional languages like Haskel Discuss how types can make for better configuration management code and how operations can learn from computer science.  This talk will be sprinkled with equal doses of philosophy, artificial intelligence, configuration management, computer science and examples using different general purpose programming languages as well as Puppet's new type system.  ":"Henrik has 30 years of experience architecting and developing software. Past positions include CTO of Cloudsmith Inc, leadership of BEA’s Java Run-Time Group (JRockit) and CTO and/or technical founder of several publicly and privately held software companies. Henrik works on the Puppet core team at Puppet Labs with special focus on the Puppet Language. He is the author of the Puppet 4.x ""future parser"", and the Puppet type system." OOO:Eric:"A Decade and Change: Puppet's Mythopoetic Journey":"Puppet turned ten years old this year, and a lot has changed since 2005. In this talk, I present its voyage through the lens of Joseph Campbell's ""Hero's Journey"" conceptual framework. I cover its origin story, born in the dark times of the early 2000's ""Tool Wars"", cover recent twists and turns in its plot development, and present a bit of a map to the rest of the voyage... ""There and Back Again"". Although it is primarily about Puppet, I provide context about both the early days of config management and the current state of the wider infrastructure tooling ecosystem.":After 16 years working as a systems/network administrator in the Bay Area, Eric relocated to Portland in 2012 to further develop his passion for awesome configuration management tools. When he's not grooming the backlog for Puppet, he's out enjoying Oregon's trails with his partner Jen, son Gunnar, and neurotic-yet-lovable pointer Indigo.  OOO:Boris FELD:Saltpad - A modern web UI for Saltstack:"Presentation of SaltPad, a modern web User Interface for Saltstack.  Saltstack is a great configuration management tool, but not very accessible for newcomers and non ""Configuration Management"" experts.  SaltPad aims to fill the gap by offering a clean, simple interface to manage the different aspects of Salt, making it ​easier​ to start​ with SaltStack and ​manage​ your SaltStack cluster day after day.  If offers a nice reporting view for jobs, especially for highstate jobs; ​helps​ you ​launch​ jobs and define predefined jobs, that can be launched with a single button; and finally, a dashboard for a global ​view​ of your cluster.  SaltPad is a great tool to help empower people to be autonomous on deployment and have visibility on the stack and deployment formulas.  At first developed​ with a classical Python Stack, SaltPad has been rewritten as a Single App Page with React. Its combination with the websocket interface of salt-api, simplifies​ the implementation and adds the niceties of a reactive interface.":"Boris Feld (@lothiraldan) is currently employed as a software engineer at tinyclues with a strong focus on operations issues and DevOps cultural shift. He worked previously at PeopleDoc where he led the ""Infrastructure as Code"" implementation and helped the transition from a traditional human-powered infrastructure to a brand new cloud SaltStack-powered openstack infrastructure in the US. He now helps his colleagues to work better and experiment on all the CLAMS issues like metrics, monitoring, error reporting, culture and processes changes. He uses AWS every day to build the most scalable, secure architecture possible using Saltstack. He is as big fan of Saltstack, he is quite active in the local French Saltstack community and has developed a web UI on top of Saltstack named saltpad (https://github.com/tinyclues/saltpad)." OOO:C. R. Oldham:"Salt Proxy Minions: Driving Non-Server Hardware with SaltStack":Salt is a powerful remote execution and automation framework that solves the configuration management challenge elegantly.  Until now, devices managed by Salt were restricted to platforms that could run a Python stack.  Salt Proxy Minions enable the addition of practically any device to a Salt infrastructure--from routers and switches to very low-resource devices like Phillips Hue lightbulbs.  This session covers demonstrations of proxy minions as well as methods and best practices for creating interface modules to attach devices to a Salt Master.:"C. R. Oldham is Platform Engineer at SaltStack, an open-source based startup located in Utah.  C. R. arrived in Utah with his family in 2008 to start a chapter of HopeKids, a nonprofit charitable organization that brings Hope to families who have kids with cancer and other life-threatening medical conditions.  Prior to that, he spent 20+ years in the technology arena, most recently as an engineer at Marvell Semiconductor in the group responsible for the apps and communication processors that powered some of RIM's Blackberry devices. He also spent a significant amount of time as IT director at a large non-profit that handles public and private school accreditation. It was in this environment that he discovered the incredible value that is open source, and eventually replaced a significant number of proprietary technologies with it, saving the organization thousands of dollars a year in licensing costs." OOO:Stephen Benjamin:SaltStack integration with Foreman:"This talk is a basic introduction to foreman_salt, including an overview of new features since last year's ConfigManagementCamp.  We'll also talk about the status of integration the plugin into Foreman's new remote execution framework, other future improvements, and how you can get involved.  ":Stephen Benjamin is a Senior Software Engineer at Red Hat that works on the Foreman and Katello projects.  He's a maintainer of the community plugins for Salt, foreman_salt and smart_proxy_salt.  OOO:Trond Hindenes:Ansible + Windows:Ansible's newfound love for Windows opens up a new world of opportunities on the Windows platform. This session will cover the basics of what Ansible is and how it works on Windows, then dive into developing PowerShell-based modules for Ansible. The session will also cover how Ansible and DSC fits together, and lastly a few words on how to provision Azure resources from Ansible.:Trond Hindenes is the CTO/Chief Architect at Pundit Consulting in Norway. Trond as done a mix of consulting and internal operations/engineering and mainly focuses on automation projects on-prem or in Azure. Trond is also a contributor on several of the PowerShell modules included in Ansible.  OOO:Simon McCartney:Minimal First Machine in the DC:"Life in the ephemeral physical lab is very different from the modern cloudy IaaS world that a lot of people live in.  When you're deploying a cloud, you need tools that assume that there is no cloud that goes before you.  Especially when you are trying to recreate the minimal environments that customers may be building clouds in (if you're cloud management tool is supposed to manage DHCP/TFTP/PXE & you're remote to the DC, how do you install that first machine without swearing at the remote KVM console?) In this talk we'll cover tools & techniques developed for standing up the first machine in a DC with zero-touch provisioning, using Ansible, ansible-provisioning, HP iLO, iso-builder and HP SSTK.":Simon works for HP Software, having worked in both development & operations in companies large and small of the last 20 years in IT. Simon's current role in HP Software is as the Technical Lead for Helion Platform Engineering Systems - where they work on CI/CD tools for deploying clouds. He lives in Northern Ireland with his wife Emma & 3 beautiful children, Zoe, Rory & Ollie, who make sure Simon enjoys life away from the keyboard.  OOO:Sebastian Neubauer:A Pythonic Approach to Continuous Delivery:In the python universe, most of the tutorials e.g. about web development with Flask or Django finish by starting a local “dummy” server, missing out all the steps needed for production ready operation of the web service. In this talk I will go through the complete delivery pipeline from application development to the industrial grade operation within a pythonic environment. Instead of presenting ready-to-use enterprise solution, I will outline the necessary building blocks for continuous delivery and config management and fill them up with simple but working poor man’s solutions. After the talk you will know how to build a pythonic continuous delivery pipeline with open-source tools like “Ansible”, “Devpi” and “Jenkins” and I will share some of my day-to-day experiences with automation in general and the python way of “get this sh*t running” in particular.:After my PhD in physics I realized in my first job as a Data Scientist at Blue Yonder, that it takes a lot more than just software and algorithms to deliver value to the customers. That's when I dived into configuration management, application lifecycle and the design, development and operation of distributed systems in general.  OOO:Choon Ming Goh:Things I learn on what not to do when automating Jenkins:There are many guides, articles or presentations that describes about the do's for continuous testing platforms. However, during my stint with a on-going client project I learn a lot of what we should NOT do and the things we should consider when we are planning to automate Jenkins in our environment using Puppet.:Choon Ming works for OlinData where he is the principal engineer and deliver trainings in Puppet all over Asia Pacific and European region. Choon Ming conducts research and implements new and upcoming technologies in the company. He has been working on Puppet and systems administration since 2010. Despite his hectic travel schedule, you can always find him wherever there is good food, music and beer.  OOO:Arthur Lutz:Roll out active supervision with Salt, Graphite and Grafana:"Having difficulties with passively testing your infrastructure with old-school supervision software ? Reverse the trend by doing active checks automated by Salt reusing Nagios checks and Munin plugins, collect them in Graphite and explore them by building graphs in Grafana, finally define alerts with tools like Graphite-beacon or Cabot.  Adopt Salt and its flexibility, modularity and event bus that will add software glue between your existing applications and help you scale them.  This presentation will be looking at how to solve some scalability issues in monitoring and migrating from traditional tools to newer tools while keeping existing developments. ":Arthur Lutz has been working for more than 10 years with Logilab on free open source software, as a developer and systems administrator. He has been using, deploying and contributing to Salt for the past 3 years and is a Salt Certified Engineer. He is one of the main organisers of the Salt Community in Paris (France).  OOO:Arthur Lutz:Use Salt to test parts of your infrastructure on OpenStack or Docker before deploying changes to production:"Use Salt and Salt-cloud to test parts of your infrastructure in a sandbox environment, in virtual machines on a public or private cloud (OpenStack for example), or with containers (LXC or docker). Using a DVCS such as mercurial then enables one to test your patches of infrastructure-as-code before deploy it.  The example application used in this presentation will be a N-tier application with a classic front-end, application and database architecture that can be replicated in various sandbox environments using Salt's orchestrator and salt-cloud's capacity to create and destroy elastic resources. For the docker scenario, docker modules in salt can be used, but also docker-compose.":Arthur Lutz has been working for more than 10 years with Logilab on free open source software, as a developer and systems administrator. He has been using, deploying and contributing to Salt for the past 3 years and is a SaltStack Certified Engineer. He is one of the main organisers of the Salt Community in Paris (France).  OOO:JJ Asghar:Deploying OpenStack Sanely with Chef:I would like to tell the story of the openstack-chef-repo and the mistakes I've made with it. This talk explains how the openstack-chef-repo was created, tested, verified, and failed. I introduce the openstack-model-t during this talk also.:"JJ is a Sr. Partner Engineer at Chef, he was also the PTL for the Openstack-Chef project. He lives in Austin, Texas and has been part of the OpenStack community since Diablo's release.  He enjoys a good strong stout, hoppy IPA, and some Dwarf Fortress. He's a member of the Church of Emacs, and attempts to push people to use Markdown over reStructuredText.  He's a father and husband, if he's not trying to automate his job away he's trying to convince his daughters to ""let the bot's do the work for them."" " OOO:Stephen Benjamin:PXEless discovery:Foreman Discovery is the Foreman project's solution to Metal as a Service. It can discover, register, and provision bare metal systems without knowing anything about them beforehand. Now, with the latest version of Discovery, you're able to boot hosts using the Discovery image directly instead of relying on DHCP and PXE, by mounting the ISO or burning to a CD-ROM or USB stick. In this talk, we'll do a quick introduction to Discovery, before going on to cover the new PXEless features.:
